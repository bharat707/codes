#include<iostream>
using namespace std;
int partition(int arr[],int start,int end)
{
    int pivot = arr[start];
    int count = 0;
    for(int i=start+1;i<=end;i++)
    {
        if(arr[i]<=pivot)
        {
            count ++;
        }
    }
    //pivot's right place
    int pivotIndex = start + count;
    swap(arr[pivotIndex],arr[start]);
     int i=start ;
     int j=end;
     while(i<pivotIndex && j>pivotIndex)
     {
         while(arr[i] < pivot)
         {
             i++;
         }
         while(arr[j]>pivot){
             j++;
         }
         if(i<pivotIndex && j>pivotIndex){
         swap(arr[i++],arr[j--]);
         }
     }
     return pivotIndex;
    
}
void quickSort(int arr[],int start,int end)
{
    // base case
    if(start>=end)
    {
        return;
    }
    //processing
    int p = partition(arr,start,end);
    
    //sort left part
    quickSort(arr,start,p-1);
    
    //sort right part
    quickSort(arr,p+1,end);
     
    
}
int main()
{
    int arr[6] = {3,5,7,8,1,2};
    quickSort(arr,0,6;
    for(int i=0;i<6;i++)
    {
        std::cout << arr[i] <<" ";
    }cout<<endl;
    
    return 0;
}
