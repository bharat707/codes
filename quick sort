#include<iostream>
using namespace std;
int partition(int arr[],int s,int e)
{
    int pivot = arr[s];
    int count = 0;
    for(int i=s+1;i<=e;i++)
    {
        if(arr[i] <= pivot)
        {
            count++;
        }
    }
    // place pivot ko sahi jagha par
    int pivotIndex = s + count;
    swap(arr[pivotIndex],arr[s]);
    //left and right part
    int i=s,j=e;
    while(i<pivotIndex && j> pivotIndex)
    {
        while(arr[i] < pivot){
            i++;
        }
        while(arr[j] > pivot)
        {
            j--;
        }
        if(i<pivotIndex && j>pivotIndex)
        {
            swap(arr[i++],arr[j++]);
        }
    }
    return pivotIndex;
}
void quickSort(int arr[],int s,int e)
{
    // base case
    if(s>=e)
    {
        return;
    }
    //processing 
    int p = partition(arr,s,e);
    //recursive reletion
    
    //left partition
    quickSort(arr,s,p-1);
    //right partition
    quickSort(arr,p+1,e);
}
int main()
{
    int arr[]={9,8,7,6,5,4,3,2,1,10};
    int n =10;
    quickSort(arr,0,n);
    for(int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }
    
    
}
